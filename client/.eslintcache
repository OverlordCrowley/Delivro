[{"C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\index.js":"1","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\store\\UserStore.js":"2","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\App.js":"3","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\store\\DeviceStore.js":"4","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\http\\userAPI.js":"5","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\AppRouter.js":"6","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\footer\\Footer.js":"7","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\narbar\\NavBar.js":"8","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\http\\index.js":"9","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\routes.js":"10","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\utils\\consts.js":"11","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\pages\\DevicePage.js":"12","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\pages\\Auth.js":"13","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\pages\\Shop.js":"14","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\pages\\Admin.js":"15","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\pages\\Basket.js":"16","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\http\\restaurantAPI.js":"17","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\http\\deviceAPI.js":"18","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\DeviceList.js":"19","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\search\\Search.js":"20","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\modals\\CreateType.js":"21","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\modals\\CreateRestaurantType.js":"22","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\basketCard\\BasketCard.js":"23","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\modals\\CreateRestaurant.js":"24","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\modals\\CreateDevice.js":"25","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\DeviceItem.js":"26","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\modals\\CreateOrder.js":"27","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\modals\\ChangeOrderState.js":"28"},{"size":443,"mtime":1686565508000,"results":"29","hashOfConfig":"30"},{"size":401,"mtime":1611985806000,"results":"31","hashOfConfig":"30"},{"size":938,"mtime":1686992045952,"results":"32","hashOfConfig":"30"},{"size":1100,"mtime":1686991684328,"results":"33","hashOfConfig":"30"},{"size":695,"mtime":1686988348023,"results":"34","hashOfConfig":"30"},{"size":773,"mtime":1686476962000,"results":"35","hashOfConfig":"30"},{"size":4138,"mtime":1686641938000,"results":"36","hashOfConfig":"30"},{"size":7610,"mtime":1686474860000,"results":"37","hashOfConfig":"30"},{"size":407,"mtime":1686989323259,"results":"38","hashOfConfig":"30"},{"size":774,"mtime":1611985806000,"results":"39","hashOfConfig":"30"},{"size":228,"mtime":1611985806000,"results":"40","hashOfConfig":"30"},{"size":6785,"mtime":1687071986235,"results":"41","hashOfConfig":"30"},{"size":3142,"mtime":1611985806000,"results":"42","hashOfConfig":"30"},{"size":1386,"mtime":1686994542641,"results":"43","hashOfConfig":"30"},{"size":2608,"mtime":1687073764267,"results":"44","hashOfConfig":"30"},{"size":4165,"mtime":1687002207695,"results":"45","hashOfConfig":"30"},{"size":825,"mtime":1687004190787,"results":"46","hashOfConfig":"30"},{"size":2520,"mtime":1687076071366,"results":"47","hashOfConfig":"30"},{"size":1080,"mtime":1686992970193,"results":"48","hashOfConfig":"30"},{"size":521,"mtime":1686483898000,"results":"49","hashOfConfig":"30"},{"size":1355,"mtime":1611985806000,"results":"50","hashOfConfig":"30"},{"size":2263,"mtime":1686639686000,"results":"51","hashOfConfig":"30"},{"size":3658,"mtime":1687001640864,"results":"52","hashOfConfig":"30"},{"size":2153,"mtime":1686512936000,"results":"53","hashOfConfig":"30"},{"size":5058,"mtime":1687071604592,"results":"54","hashOfConfig":"30"},{"size":1698,"mtime":1686993433484,"results":"55","hashOfConfig":"30"},{"size":1725,"mtime":1687005131650,"results":"56","hashOfConfig":"30"},{"size":2894,"mtime":1687076071306,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"d0nrcv",{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":5,"source":"74","usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"60"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\index.js",[],["127","128"],"C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\store\\UserStore.js",[],"C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\App.js",["129"],"import React, {useContext, useEffect, useState} from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/narbar/NavBar\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"./index\";\nimport {check} from \"./http/userAPI\";\nimport {Spinner} from \"react-bootstrap\";\nimport Footer from \"./components/footer/Footer\";\n\nconst App = observer(() => {\n    const {user} = useContext(Context)\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        check().then(data => {\n            user.setUser(true)\n            user.setIsAuth(true)\n        }).finally(() => setLoading(false))\n    }, [])\n\n    if (loading) {\n        return <Spinner animation={\"grow\"}/>\n    }\n\n    return (\n        <BrowserRouter>\n            <NavBar />\n            <AppRouter />\n            <Footer/>\n        </BrowserRouter>\n    );\n});\n\nexport default App;\n","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\store\\DeviceStore.js",[],"C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\http\\userAPI.js",[],"C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\AppRouter.js",[],"C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\footer\\Footer.js",["130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147"],"import React, {useContext} from 'react';\nimport {Context} from \"../../index\";\nimport '../styles.css';\nimport {observer} from \"mobx-react-lite\";\nimport {Link, useHistory} from 'react-router-dom';\nimport planet  from './location.svg';\nimport vk  from '../../assets/img/vk.svg';\nimport github  from '../../assets/img/github.svg';\nimport tg  from '../../assets/img/telegram.svg';\nimport ap  from '../../assets/img/app_store.svg';\nimport gp  from '../../assets/img/google_play.svg';\nimport arrow  from '../../assets/img/arrow.svg';\n\nconst Footer = observer(() => {\n    const {user} = useContext(Context)\n    const history = useHistory()\n\n\n    let scrollToTop = () => {\n        window.scrollTo({\n            top: 0,\n            behavior: 'smooth',\n        });\n    };\n\n    return (\n        <footer className=\"footer\">\n            <div className=\"container\">\n                    <button className=\"button_up\" onClick={scrollToTop} >\n                        <img src={arrow}/>\n                    </button>\n\n                <div className=\"footer_logo\">\n                    <Link to=\"/\" className=\"logo\">\n                        <span className=\"USER\">Del</span>\n                        <span className=\"EATS\">ivro</span>\n                    </Link>\n                </div>\n                <hr className=\"line\"/>\n\n                    <div className=\"links\">\n                        <div className=\"col-lg-4 col-md-4 col-xs-7\">\n\n\n                            <div className=\"hash\">\n                                <span className=\"hash_tag\">#</span>Delivro\n                            </div>\n\n                            <div className=\"social\">\n                                <a href=\"https://vk.com\" target=\"_blank\">\n                                    <img src={vk} alt=\"vk\"/>\n                                </a>\n                                <a href=\"https://github.com\" target=\"_blank\">\n                                    <img src={github} alt=\"github\"/>\n                                </a>\n                                <a href=\"https://web.telegram.org\" target=\"_blank\">\n                                    <img src={tg} alt=\"telegram\"/>\n                                </a>\n                            </div>\n                        </div>\n\n                        <div className=\"col-lg-4 col-md-4 col-xs-12\">\n                            <div className=\"center_content\">\n                                <p><a href=\"#\">Об UserEats</a></p>\n                                <p><a href=\"#\">Станьте партнёром по доставке</a></p>\n                                <p><a href=\"#\">Станьте парнёром-рестораном</a></p>\n                            </div>\n                        </div>\n\n                        <div className=\"col-lg-4 col-md-3 col-xs-12\">\n                            <div className=\"right_content\">\n                                <p><a href=\"#\">Цены</a></p>\n                                <p><a href=\"#\">Помощь</a></p>\n                                <p><a href=\"#\">FAQs</a></p>\n                            </div>\n                        </div>\n                    </div>\n\n                    <hr className=\"line\"/>\n\n                        <div className=\"download\">\n                            <a href=\"https://apple.com\" target=\"_blank\">\n                                <img src={ap} alt=\"App Store\"/>\n                            </a>\n                            <a href=\"https://play.google.com\" target=\"_blank\">\n                                <img src={gp} alt=\"Google Play\"/>\n                            </a>\n                        </div>\n\n                        <hr className=\"line\"/>\n\n                            <div className=\"privacy\">\n                                <p><a href=\"#\">© 2017 User Technologies Inc</a></p>\n                                <p><a href=\"#\">Обработка персональных данных</a></p>\n                                <p><a href=\"#\">Пользовательское соглашение</a></p>\n                            </div>\n            </div>\n        </footer>\n\n    );\n});\n\nexport default Footer;\n","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\narbar\\NavBar.js",["148","149","150","151","152","153","154","155"],"import React, {useContext} from 'react';\nimport {Context} from \"../../index\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport {NavLink} from \"react-router-dom\";\nimport {ADMIN_ROUTE, BASKET_ROUTE, LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE} from \"../../utils/consts\";\nimport {Button} from \"react-bootstrap\";\nimport '../styles.css';\nimport {observer} from \"mobx-react-lite\";\nimport Container from \"react-bootstrap/Container\";\nimport {useHistory} from 'react-router-dom'\nconst NavBar = observer(() => {\n    const {user} = useContext(Context)\n    const history = useHistory()\n\n    const logOut = () => {\n        user.setUser({})\n        user.setIsAuth(false)\n    }\n\n    return (\n        <Navbar bg=\"white\" variant=\"white\">\n\n\n\n                <header className=\"header\">\n                    <div className=\"container\">\n                        <div className=\"header_body\">\n                            <div className=\"header_logo\">\n                                <NavLink to='/' className=\"logo\">\n                                    <span className=\"USER\">Delivro</span>\n                                </NavLink>\n                            </div>\n\n                            <div className=\"header_items\">\n                                <div className=\"header_login\">\n                                    {user.isAuth ?\n                                        <>\n                                            <button className=\"login_button\" id=\"myBtn_Admin\" onClick={() => history.push(ADMIN_ROUTE)}>Админ панель\n                                            </button>\n                                            <button className=\"login_button\" id=\"myBtn_Admin\" onClick={() => logOut()}>Выход\n                                            </button>\n                                            <button className=\"header_basket\" id=\"myBtn_card\" onClick={() => history.push(BASKET_ROUTE)}>\n                                                <i className='bx bxs-shopping-bag bx-sm'></i>\n                                            </button>\n                                        </>\n                                        :\n                                        <>\n                                            <button className=\"login_button\" id=\"myBtn_registration\" onClick={() => history.push(REGISTRATION_ROUTE)}>Регистрация <i\n                                                className='bx bx-user-plus bx-sx'></i></button>\n                                            <button className=\"login_button\" id=\"myBtn_login\" onClick={() => history.push(LOGIN_ROUTE)}>Авторизация <i\n                                                className='bx bxs-user-check bx-sx'></i></button>\n                                        </>\n                                    }\n\n\n                                </div>\n\n\n                                <div id=\"myModal_registration\" className=\"modal registration\">\n                                    <div className=\"modal-content\">\n                                        <div className=\"modal-header registration\">\n                                            <span className=\"close_registration\">&times;</span>\n                                            <h2>Регистрация</h2>\n                                        </div>\n\n                                        <div className=\"modal-body\">\n                                            <form>\n                                                <input type=\"email\" placeholder=\"E-mail\" required/>\n                                                    <input type=\"tel\" placeholder=\"Телефон\" required/>\n                                                        <input type=\"text\" placeholder=\"Логин\" required/>\n                                                            <input type=\"password\" placeholder=\"Пароль\" required/>\n                                                                <input type=\"password\" placeholder=\"Повторите пароль\"\n                                                                       required />\n                                                                    <button>Зарегистрироваться</button>\n                                            </form>\n                                        </div>\n\n                                        <div className=\"modal-footer registration\">\n                                            <span>Есть аккаунт?</span> <a href=\"javascript:login();\">Авторизация</a><i\n                                            className='bx bx-right-arrow-alt'></i>\n                                        </div>\n                                    </div>\n                                </div>\n\n\n                                <div id=\"myModal_login\" className=\"modal login\">\n                                    <div className=\"modal-content\">\n                                        <div className=\"modal-header login\">\n                                            <span className=\"close_login\">&times;</span>\n                                            <h2>Авторизация</h2>\n                                        </div>\n\n                                        <div className=\"modal-body\">\n                                            <form>\n                                                <input type=\"text\" placeholder=\"Логин\" required/>\n                                                    <input type=\"password\" placeholder=\"Пароль\" required/>\n                                                        <button>Войти</button>\n                                            </form>\n                                        </div>\n\n                                        <div className=\"modal-footer login\">\n                                            <span>Нет аккаунта?</span> <a\n                                            href=\"javascript:registration();\">Регистрация</a><i\n                                            className='bx bx-right-arrow-alt'></i>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"header_basket\" id=\"myBtn_card\">\n\n                                </div>\n\n                                <div id=\"myModal_card\" class=\"modal card\">\n                                    <div class=\"modal-content card\">\n                                        <div class=\"modal-header card\">\n                                            <span class=\"close_card\">&times;</span>\n                                            <h2>Ваши товары</h2>\n                                        </div>\n\n                                        <div class=\"modal-body\">\n                                            <div class=\"products\">\n                                                <img src=\"assets/img/hotter/french_omelette.png\" alt=\"Французский омлет\"/>\n                                                <h5>Французский омлет</h5>\n\n                                            </div>\n                                        </div>\n\n                                        <div class=\"modal-footer card\">\n\n                                        </div>\n                                    </div>\n                                </div>\n\n\n                            </div>\n                        </div>\n                    </div>\n                </header>\n\n\n\n\n\n        </Navbar>\n\n    );\n});\n\nexport default NavBar;\n","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\http\\index.js",[],"C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\routes.js",[],"C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\utils\\consts.js",[],"C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\pages\\DevicePage.js",["156","157","158","159","160","161","162","163"],"C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\pages\\Auth.js",["164"],"import React, {useContext, useState} from 'react';\nimport {Container, Form} from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport {NavLink, useLocation, useHistory} from \"react-router-dom\";\nimport {LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE} from \"../utils/consts\";\nimport {login, registration} from \"../http/userAPI\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\n\nconst Auth = observer(() => {\n    const {user} = useContext(Context)\n    const location = useLocation()\n    const history = useHistory()\n    const isLogin = location.pathname === LOGIN_ROUTE\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const click = async () => {\n        try {\n            let data;\n            if (isLogin) {\n                data = await login(email, password);\n            } else {\n                data = await registration(email, password);\n            }\n            user.setUser(user)\n            user.setIsAuth(true)\n            history.push(SHOP_ROUTE)\n        } catch (e) {\n            alert(e.response.data.message)\n        }\n\n    }\n\n    return (\n        <Container\n            className=\"d-flex justify-content-center align-items-center\"\n            style={{height: window.innerHeight - 54}}\n        >\n            <Card style={{width: 600}} className=\"p-5\">\n                <h2 className=\"m-auto\">{isLogin ? 'Авторизация' : \"Регистрация\"}</h2>\n                <Form className=\"d-flex flex-column\">\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваш email...\"\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваш пароль...\"\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                        type=\"password\"\n                    />\n                    <Row className=\"d-flex justify-content-between mt-3 pl-3 pr-3\">\n                        {isLogin ?\n                            <div>\n                                Нет аккаунта? <NavLink to={REGISTRATION_ROUTE}>Зарегистрируйся!</NavLink>\n                            </div>\n                            :\n                            <div>\n                                Есть аккаунт? <NavLink to={LOGIN_ROUTE}>Войдите!</NavLink>\n                            </div>\n                        }\n                        <Button\n                            variant={\"outline-success\"}\n                            onClick={click}\n                        >\n                            {isLogin ? 'Войти' : 'Регистрация'}\n                        </Button>\n                    </Row>\n\n                </Form>\n            </Card>\n        </Container>\n    );\n});\n\nexport default Auth;\n","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\pages\\Shop.js",["165","166"],"import React, {useContext, useEffect, useState} from 'react';\nimport {Container} from \"react-bootstrap\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport DeviceList from \"../components/DeviceList\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport {fetchDevices, fetchTypes} from \"../http/deviceAPI\";\nimport {fetchRestaurant} from \"../http/restaurantAPI\";\nimport Search from \"../components/search/Search\";\n\nconst Shop = observer(() => {\n    const {restaurant} = useContext(Context)\n    let [searchText, setSearchText] = useState('');\n\n    let textChangeHandler = (val) =>{\n        setSearchText(val);\n    }\n\n\n    useEffect(() => {\n        fetchRestaurant().then(data => restaurant.setRestaurant(data))\n        fetchTypes().then(data => restaurant.setTypes(data))\n        fetchDevices().then(data => restaurant.setDevices(data))\n    }, [])\n\n    useEffect(() => {\n        fetchRestaurant(searchText).then(data => {\n            restaurant.setRestaurant(data)\n        })\n            .catch(e=>{\n                console.log(e)\n            })\n    }, [searchText])\n\n\n    return (\n        <Container>\n            <Row>\n                <Col>\n                    <Search fc={textChangeHandler}/>\n                    <DeviceList />\n                </Col>\n            </Row>\n        </Container>\n    );\n});\n\nexport default Shop;\n","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\pages\\Admin.js",[],"C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\pages\\Basket.js",["167","168","169"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { fetchBasketCards, fetchRestaurant, fetchTypes } from '../http/deviceAPI';\r\nimport jwt_decode from 'jwt-decode';\r\nimport BasketCard from '../components/basketCard/BasketCard';\r\nimport CreateOrder from \"../components/modals/CreateOrder\";\r\n\r\nconst Basket = observer(() => {\r\n    const [cards, setCard] = useState([]);\r\n    const [totalPrice, setTotalPrice] = useState(0);\r\n    const [orderVisible, setOrderVisible] = useState(false)\r\n\r\n\r\n    const updateTotalPrice = (price) => {\r\n        setTotalPrice((prevTotal) => prevTotal + Number(price));\r\n    };\r\n\r\n    const updateTotalPriceMinus = (price) => {\r\n        setTotalPrice((prevTotal) => prevTotal - Number(price));\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        fetchBasketCards({ userId: jwt_decode(localStorage.getItem('token')).id }).then((data) => {\r\n            setCard(data);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n            let arr = cards.reduce((sum, el) => {\r\n            if (el.device.discount_price < el.device.price) {\r\n                return sum + el.device.discount_price * el.count;\r\n            } else {\r\n                return sum + el.device.price * el.count;\r\n            }\r\n        }, 0);\r\n        setTotalPrice(arr);\r\n    }, [cards])\r\n\r\n    return (\r\n        <Container className=\"mt-3\">\r\n            <nav className=\"nav_menu\" id=\"nav_menu\">\r\n                <div className=\"container\">\r\n                    <div className=\"row col-lg-8 col-md-12 col-xs-0 main_menu\">\r\n                        {cards && cards.length > 0 ? (\r\n                            <>\r\n                                <table>\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th className=\"green\">Изображение</th>\r\n                                        <th className=\"green\">Название</th>\r\n                                        <th className=\"green\">Количество</th>\r\n                                        <th className=\"green\">Цена за 1шт</th>\r\n                                        <th className=\"green\">Цена</th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                    {cards.map((el) => (\r\n                                        <BasketCard\r\n                                            key={el.id}\r\n                                            id={el.id}\r\n                                            count={el.count}\r\n                                            device={el.device}\r\n                                            updateTotalPricePlus={updateTotalPrice}\r\n                                            updateTotalPriceMinus={updateTotalPriceMinus}\r\n                                            devicePrice={el.device.price > el.device.discount_price ? el.count * el.device.discount_price : el.count * el.device.price}\r\n                                        />\r\n                                    ))}\r\n                                    </tbody>\r\n                                </table>\r\n\r\n                                <p className=\"TotalPrice\">Итоговая цена: {totalPrice}</p>\r\n                                <br />\r\n                                <button className=\"headerMap green OrderBtn\" onClick={(e) => {\r\n                                    setOrderVisible(true)\r\n                                }}>\r\n                                    Перейти к оформлению\r\n                                </button>\r\n                            </>\r\n                        ) : (\r\n                            <p style={{ color: '#fff', fontSize: 26 }}>У вас нет товаров в корзине</p>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <CreateOrder show={orderVisible} onHide={() => setOrderVisible(false)}/>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Basket;\r\n","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\http\\restaurantAPI.js",["170"],"import {$authHost, $host} from \"./index\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createRestaurant = async (type) => {\n    const {data} = await $authHost.post('api/restaurant', type)\n    return data\n}\n\nexport const fetchRestaurant = async (text) => {\n    if(text !== \"\"){\n            const {data} = await $host.get('api/restaurant?name=' + text )\n        return data\n    }\n    else{\n        const {data} = await $host.get('api/restaurant')\n        return data\n    }\n}\n\n\nexport const fetchOneRestaurant = async (id) => {\n    try {\n        const {data} = await $host.get('api/restaurant/' + id)\n        return data\n    }\n   catch (e){\n       console.log(e)\n   }\n}\n\nexport const createOrder = async ({phone, userId}) => {\n    const {data} = await $authHost.post('api/order', {phone, userId})\n    return data\n}\n\n\n\n\n\n\n\n","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\http\\deviceAPI.js",["171"],"C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\DeviceList.js",["172","173","174"],"import React, {useContext, useEffect, useState} from 'react';\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport {Row} from \"react-bootstrap\";\nimport './styles.css';\nimport DeviceItem from \"./DeviceItem\";\nimport {fetchRestaurant} from \"../http/restaurantAPI\";\n\nconst DeviceList = observer((props) => {\n    const {restaurant} = useContext(Context)\n\n    return (\n        <Row className=\"d-flex\">\n            <main>\n                <div className=\"container\">\n                    <h2 className=\"main_title\">Все предложения</h2>\n                    <div className=\"row\" style={{alignItems: \"stretch\"}}>\n                        {restaurant.restaurant.length > 0 ?\n                            restaurant.restaurant.map(cafe=>(\n                            <DeviceItem cafe={cafe} key={cafe.id}/>\n                        )) : 'Нет ресторанов с данным названием'\n                        }\n                    </div>\n                </div>\n\n            </main>\n        </Row>\n    );\n});\n\nexport default DeviceList;\n","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\search\\Search.js",[],"C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\modals\\CreateType.js",[],"C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\modals\\CreateRestaurantType.js",["175","176","177"],"import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Form, Button} from \"react-bootstrap\";\nimport {createRestaurantType, createType, fetchRestaurant, fetchTypes} from \"../../http/deviceAPI\";\nimport {Context} from \"../../index\";\n\nconst CreateType = ({show, onHide}) => {\n    const {restaurant} = useContext(Context)\n    const [value, setValue] = useState('')\n    const [restauran, setRestauran] = useState('')\n\n\n    useEffect(() => {\n        fetchRestaurant().then(data => restaurant.setRestaurant(data))\n    }, [])\n\n    const addRestaurantType = () => {\n        createRestaurantType({'name': value, 'restaurantId': restauran}).then(data => {\n            setValue('')\n            onHide()\n        })\n    }\n\n    function changeRestaurant(e) {\n        setRestauran(e.target.value);\n    }\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить тип\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Control\n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                        placeholder={\"Введите название типа\"}\n                    />\n                    <select className=\"lang lang-b\" value={restauran} onChange={changeRestaurant}>\n                        {restaurant.restaurant.map(restaurants =>\n                            <option\n                                value={restaurants.id}\n                                key={restaurants.id}>\n                                {restaurants.name}\n                            </option>\n                        )}\n                    </select>\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addRestaurantType}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default CreateType;\n","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\basketCard\\BasketCard.js",["178","179","180","181"],"import React, { useState, useEffect } from 'react';\r\nimport { deleteBasketCard, updateBasketCard } from '../../http/deviceAPI';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nconst BasketCard = ({ count, device, updateTotalPricePlus, updateTotalPriceMinus, devicePrice, id }) => {\r\n    const [currentCount, setCurrentCount] = useState(count);\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [img, setImg] = useState('');\r\n    const [discountPrice, setDiscountPrice] = useState(0);\r\n    const [total, setTotal] = useState(0);\r\n    const [devPrice, setDevPrice]=  useState(devicePrice);\r\n    const [deviceId, setDeviceId]=  useState(id);\r\n\r\n\r\n    useEffect(()=>{\r\n        setTotal(devicePrice)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setName(device.name);\r\n        setPrice(device.price);\r\n        setImg(device.img);\r\n        setDiscountPrice(device.discount_price);\r\n        setDeviceId(id)\r\n        if(device.discount_price < device.price){\r\n            setTotal(device.discount_price * count)\r\n        }\r\n        else {\r\n            setTotal(device.price * count)\r\n        }\r\n    }, [device, devicePrice, id]);\r\n\r\n    useEffect(()=>{\r\n        calculateTotal();\r\n\r\n    }, [currentCount])\r\n\r\n    const calculateTotal = () => {\r\n        let calculatedTotal = 0;\r\n        if (discountPrice < price) {\r\n            calculatedTotal = discountPrice * currentCount;\r\n        } else {\r\n            calculatedTotal = price * currentCount;\r\n        }\r\n        setTotal(calculatedTotal);\r\n\r\n    };\r\n\r\n    const handleIncrement = () => {\r\n        if (currentCount < 10) {\r\n            setCurrentCount((prevCount) => prevCount + 1);\r\n\r\n            updateBasketCard({ 'userId': jwt_decode(localStorage.getItem('token')).id,'deviceId': deviceId, 'count': currentCount+1}).then()\r\n            if(price > discountPrice){\r\n                updateTotalPricePlus(discountPrice)\r\n            }\r\n            else{\r\n                updateTotalPricePlus(price)\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDecrement = () => {\r\n        if (currentCount > 1) {\r\n            setCurrentCount((prevCount) => prevCount - 1);\r\n            updateBasketCard({ 'userId': jwt_decode(localStorage.getItem('token')).id,'deviceId': deviceId, 'count': currentCount-1}).then()\r\n            if(price > discountPrice){\r\n                updateTotalPriceMinus(discountPrice)\r\n            }\r\n            else{\r\n                updateTotalPriceMinus(price)\r\n            }\r\n\r\n        }\r\n        else{\r\n            deleteBasketCard({ 'userId': jwt_decode(localStorage.getItem('token')).id,'deviceId': deviceId}).then(\r\n                window.location.reload()\r\n            )\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <tr>\r\n            <td className=\"RowImage\">\r\n                <img src={img ? process.env.REACT_APP_API_URL + img : ''} alt={img ? img : ''} />\r\n            </td>\r\n            <td>\r\n                <span className=\"whiteText\">{name ? name : ''}</span>\r\n            </td>\r\n            <td>\r\n        <span className=\"whiteText\">\r\n          <button className={'btnEvent'} onClick={handleIncrement}>+</button>\r\n            <span className={'number'}>{currentCount}</span>\r\n            <button className={'btnEvent'} onClick={handleDecrement}>-</button>\r\n        </span>\r\n            </td>\r\n            <td>\r\n                <span className=\"whiteText\">{discountPrice < price ? discountPrice : price}</span>\r\n            </td>\r\n            <td className={'tdTotal'}>\r\n                <span className=\"whiteText total\">{total > 0 ? total : devPrice}</span>\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default BasketCard;\r\n","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\modals\\CreateRestaurant.js",["182","183"],"import React, {useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {createDevice, createType} from \"../../http/deviceAPI\";\nimport {createRestaurant} from \"../../http/restaurantAPI\";\n\nconst CreateRestaurant = ({show, onHide}) => {\n    const [value, setValue] = useState('')\n    const [time, setTime] = useState('')\n    const [file, setFile] = useState(null)\n\n\n    const addRestaurant = () => {\n        const formData = new FormData()\n        formData.append('name', value)\n        formData.append('time', time)\n        formData.append('img', file)\n        createRestaurant(formData).then(data => onHide())\n    }\n\n    const selectFile = e => {\n        setFile(e.target.files[0])\n    }\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить ресторан\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Control\n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                        placeholder={\"Введите название ресторана\"}\n                    />\n                    <Form.Control\n                        value={time}\n                        onChange={e => setTime(e.target.value)}\n                        placeholder={\"Введите время готовки\"}\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        type=\"file\"\n                        onChange={selectFile}\n                    />\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addRestaurant}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default CreateRestaurant;\n","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\modals\\CreateDevice.js",["184"],"C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\DeviceItem.js",["185","186","187","188","189","190","191"],"import React, {useContext, useEffect, useState} from 'react';\nimport {useHistory, useParams} from \"react-router-dom\"\nimport './styles.css';\nimport {DEVICE_ROUTE} from \"../utils/consts\";\nimport {fetchBasketCards, fetchRestaurant, fetchRestaurantTypes, fetchRestaurantTypesById} from \"../http/deviceAPI\";\nimport {Context} from \"../index\";\nimport {observer} from \"mobx-react-lite\";\nimport jwt_decode from \"jwt-decode\";\n\nconst DeviceItem = observer(({cafe}) => {\n    const history = useHistory();\n    const {restaurant} = useContext(Context)\n    useEffect(() => {\n        fetchRestaurantTypes().then(data => restaurant.setRestaurantTypes(data))\n\n    }, [])\n\n    return (\n        <button className=\"restaurantItem\" onClick={() => history.push(DEVICE_ROUTE + \"/\" + cafe.id)}>\n            <div >\n                <div className=\"card_restaurants\">\n                    <img src={process.env.REACT_APP_API_URL + cafe.img} className=\"card_img\"\n                         alt={cafe.name + \" img\"}/>\n\n                    <div className=\"card_top\">\n                        <p style={{textAlign: \"left\"}}>{cafe.name}</p>\n                        <p style={{textAlign: \"left\"}} className=\"card_text\">₸₸\n                            {\n                                restaurant.restaurantTypes.map((el)=>(\n                                    el.restaurantId === cafe.id ? \" • \" + el.name: ''\n                                ))\n                            }\n\n                        </p>\n                        <p style={{textAlign: \"left\"}} className=\"card_time\">{cafe.time} мин</p>\n                    </div>\n                </div>\n            </div>\n        </button>\n    );\n});\n\nexport default DeviceItem;\n","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\modals\\CreateOrder.js",[],"C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\modals\\ChangeOrderState.js",["192","193","194","195","196","197"],{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","severity":1,"message":"203","line":20,"column":8,"nodeType":"204","endLine":20,"endColumn":10,"suggestions":"205"},{"ruleId":"206","severity":1,"message":"207","line":6,"column":8,"nodeType":"208","messageId":"209","endLine":6,"endColumn":14},{"ruleId":"206","severity":1,"message":"210","line":15,"column":12,"nodeType":"208","messageId":"209","endLine":15,"endColumn":16},{"ruleId":"206","severity":1,"message":"211","line":16,"column":11,"nodeType":"208","messageId":"209","endLine":16,"endColumn":18},{"ruleId":"212","severity":1,"message":"213","line":30,"column":25,"nodeType":"214","endLine":30,"endColumn":43},{"ruleId":"215","severity":1,"message":"216","line":50,"column":33,"nodeType":"214","messageId":"217","endLine":50,"endColumn":74,"fix":"218"},{"ruleId":"215","severity":1,"message":"216","line":53,"column":33,"nodeType":"214","messageId":"217","endLine":53,"endColumn":78,"fix":"219"},{"ruleId":"215","severity":1,"message":"216","line":56,"column":33,"nodeType":"214","messageId":"217","endLine":56,"endColumn":84,"fix":"220"},{"ruleId":"221","severity":1,"message":"222","line":64,"column":36,"nodeType":"214","endLine":64,"endColumn":48},{"ruleId":"221","severity":1,"message":"222","line":65,"column":36,"nodeType":"214","endLine":65,"endColumn":48},{"ruleId":"221","severity":1,"message":"222","line":66,"column":36,"nodeType":"214","endLine":66,"endColumn":48},{"ruleId":"221","severity":1,"message":"222","line":72,"column":36,"nodeType":"214","endLine":72,"endColumn":48},{"ruleId":"221","severity":1,"message":"222","line":73,"column":36,"nodeType":"214","endLine":73,"endColumn":48},{"ruleId":"221","severity":1,"message":"222","line":74,"column":36,"nodeType":"214","endLine":74,"endColumn":48},{"ruleId":"215","severity":1,"message":"216","line":82,"column":29,"nodeType":"214","messageId":"217","endLine":82,"endColumn":73,"fix":"223"},{"ruleId":"215","severity":1,"message":"216","line":85,"column":29,"nodeType":"214","messageId":"217","endLine":85,"endColumn":79,"fix":"224"},{"ruleId":"221","severity":1,"message":"222","line":93,"column":36,"nodeType":"214","endLine":93,"endColumn":48},{"ruleId":"221","severity":1,"message":"222","line":94,"column":36,"nodeType":"214","endLine":94,"endColumn":48},{"ruleId":"221","severity":1,"message":"222","line":95,"column":36,"nodeType":"214","endLine":95,"endColumn":48},{"ruleId":"206","severity":1,"message":"225","line":4,"column":8,"nodeType":"208","messageId":"209","endLine":4,"endColumn":11},{"ruleId":"206","severity":1,"message":"226","line":6,"column":69,"nodeType":"208","messageId":"209","endLine":6,"endColumn":79},{"ruleId":"206","severity":1,"message":"227","line":7,"column":9,"nodeType":"208","messageId":"209","endLine":7,"endColumn":15},{"ruleId":"206","severity":1,"message":"228","line":10,"column":8,"nodeType":"208","messageId":"209","endLine":10,"endColumn":17},{"ruleId":"221","severity":1,"message":"222","line":80,"column":72,"nodeType":"214","endLine":80,"endColumn":102},{"ruleId":"229","severity":1,"message":"230","line":80,"column":80,"nodeType":"231","messageId":"232","endLine":80,"endColumn":101},{"ruleId":"221","severity":1,"message":"222","line":103,"column":72,"nodeType":"214","endLine":104,"endColumn":79},{"ruleId":"229","severity":1,"message":"230","line":104,"column":50,"nodeType":"231","messageId":"232","endLine":104,"endColumn":78},{"ruleId":"206","severity":1,"message":"227","line":2,"column":9,"nodeType":"208","messageId":"209","endLine":2,"endColumn":15},{"ruleId":"206","severity":1,"message":"233","line":2,"column":17,"nodeType":"208","messageId":"209","endLine":2,"endColumn":21},{"ruleId":"206","severity":1,"message":"234","line":2,"column":23,"nodeType":"208","messageId":"209","endLine":2,"endColumn":26},{"ruleId":"206","severity":1,"message":"235","line":2,"column":39,"nodeType":"208","messageId":"209","endLine":2,"endColumn":44},{"ruleId":"206","severity":1,"message":"236","line":2,"column":46,"nodeType":"208","messageId":"209","endLine":2,"endColumn":49},{"ruleId":"202","severity":1,"message":"237","line":30,"column":8,"nodeType":"204","endLine":30,"endColumn":10,"suggestions":"238"},{"ruleId":"212","severity":1,"message":"213","line":61,"column":25,"nodeType":"214","endLine":61,"endColumn":158},{"ruleId":"239","severity":1,"message":"240","line":84,"column":64,"nodeType":"241","messageId":"242","endLine":84,"endColumn":65},{"ruleId":"206","severity":1,"message":"243","line":26,"column":17,"nodeType":"208","messageId":"209","endLine":26,"endColumn":21},{"ruleId":"202","severity":1,"message":"244","line":25,"column":8,"nodeType":"204","endLine":25,"endColumn":10,"suggestions":"245"},{"ruleId":"202","severity":1,"message":"244","line":34,"column":8,"nodeType":"204","endLine":34,"endColumn":20,"suggestions":"246"},{"ruleId":"206","severity":1,"message":"247","line":1,"column":17,"nodeType":"208","messageId":"209","endLine":1,"endColumn":27},{"ruleId":"206","severity":1,"message":"248","line":4,"column":28,"nodeType":"208","messageId":"209","endLine":4,"endColumn":43},{"ruleId":"206","severity":1,"message":"249","line":4,"column":45,"nodeType":"208","messageId":"209","endLine":4,"endColumn":55},{"ruleId":"206","severity":1,"message":"250","line":2,"column":8,"nodeType":"208","messageId":"209","endLine":2,"endColumn":18},{"ruleId":"206","severity":1,"message":"250","line":2,"column":8,"nodeType":"208","messageId":"209","endLine":2,"endColumn":18},{"ruleId":"206","severity":1,"message":"251","line":1,"column":28,"nodeType":"208","messageId":"209","endLine":1,"endColumn":37},{"ruleId":"206","severity":1,"message":"252","line":1,"column":39,"nodeType":"208","messageId":"209","endLine":1,"endColumn":47},{"ruleId":"206","severity":1,"message":"248","line":7,"column":9,"nodeType":"208","messageId":"209","endLine":7,"endColumn":24},{"ruleId":"206","severity":1,"message":"253","line":4,"column":31,"nodeType":"208","messageId":"209","endLine":4,"endColumn":41},{"ruleId":"206","severity":1,"message":"249","line":4,"column":60,"nodeType":"208","messageId":"209","endLine":4,"endColumn":70},{"ruleId":"202","severity":1,"message":"244","line":15,"column":8,"nodeType":"204","endLine":15,"endColumn":10,"suggestions":"254"},{"ruleId":"206","severity":1,"message":"255","line":12,"column":22,"nodeType":"208","messageId":"209","endLine":12,"endColumn":33},{"ruleId":"202","severity":1,"message":"256","line":18,"column":8,"nodeType":"204","endLine":18,"endColumn":10,"suggestions":"257"},{"ruleId":"202","severity":1,"message":"258","line":32,"column":8,"nodeType":"204","endLine":32,"endColumn":33,"suggestions":"259"},{"ruleId":"202","severity":1,"message":"260","line":37,"column":8,"nodeType":"204","endLine":37,"endColumn":22,"suggestions":"261"},{"ruleId":"206","severity":1,"message":"262","line":4,"column":9,"nodeType":"208","messageId":"209","endLine":4,"endColumn":21},{"ruleId":"206","severity":1,"message":"253","line":4,"column":23,"nodeType":"208","messageId":"209","endLine":4,"endColumn":33},{"ruleId":"202","severity":1,"message":"244","line":28,"column":8,"nodeType":"204","endLine":28,"endColumn":10,"suggestions":"263"},{"ruleId":"206","severity":1,"message":"252","line":1,"column":39,"nodeType":"208","messageId":"209","endLine":1,"endColumn":47},{"ruleId":"206","severity":1,"message":"264","line":2,"column":21,"nodeType":"208","messageId":"209","endLine":2,"endColumn":30},{"ruleId":"206","severity":1,"message":"265","line":5,"column":9,"nodeType":"208","messageId":"209","endLine":5,"endColumn":25},{"ruleId":"206","severity":1,"message":"248","line":5,"column":27,"nodeType":"208","messageId":"209","endLine":5,"endColumn":42},{"ruleId":"206","severity":1,"message":"266","line":5,"column":66,"nodeType":"208","messageId":"209","endLine":5,"endColumn":90},{"ruleId":"206","severity":1,"message":"250","line":8,"column":8,"nodeType":"208","messageId":"209","endLine":8,"endColumn":18},{"ruleId":"202","severity":1,"message":"244","line":16,"column":8,"nodeType":"204","endLine":16,"endColumn":10,"suggestions":"267"},{"ruleId":"206","severity":1,"message":"268","line":6,"column":5,"nodeType":"208","messageId":"209","endLine":6,"endColumn":25},{"ruleId":"206","severity":1,"message":"253","line":7,"column":5,"nodeType":"208","messageId":"209","endLine":7,"endColumn":15},{"ruleId":"206","severity":1,"message":"248","line":9,"column":5,"nodeType":"208","messageId":"209","endLine":9,"endColumn":20},{"ruleId":"206","severity":1,"message":"249","line":10,"column":5,"nodeType":"208","messageId":"209","endLine":10,"endColumn":15},{"ruleId":"206","severity":1,"message":"250","line":13,"column":8,"nodeType":"208","messageId":"209","endLine":13,"endColumn":18},{"ruleId":"206","severity":1,"message":"269","line":16,"column":12,"nodeType":"208","messageId":"209","endLine":16,"endColumn":22},"no-native-reassign",["270"],"no-negated-in-lhs",["271"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["272"],"no-unused-vars","'planet' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'history' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"273","text":"274"},{"range":"275","text":"274"},{"range":"276","text":"274"},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",{"range":"277","text":"274"},{"range":"278","text":"274"},"'Nav' is defined but never used.","'SHOP_ROUTE' is defined but never used.","'Button' is defined but never used.","'Container' is defined but never used.","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","'Card' is defined but never used.","'Col' is defined but never used.","'Image' is defined but never used.","'Row' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["279"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'restaurant'. Either include it or remove the dependency array.",["280"],["281"],"'useContext' is defined but never used.","'fetchRestaurant' is defined but never used.","'fetchTypes' is defined but never used.","'jwt_decode' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'createType' is defined but never used.",["282"],"'setDevPrice' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'devicePrice'. Either include it or remove the dependency array. If 'setTotal' needs the current value of 'devicePrice', you can also switch to useReducer instead of useState and read 'devicePrice' in the reducer.",["283"],"React Hook useEffect has a missing dependency: 'count'. Either include it or remove the dependency array. If 'setTotal' needs the current value of 'count', you can also switch to useReducer instead of useState and read 'count' in the reducer.",["284"],"React Hook useEffect has a missing dependency: 'calculateTotal'. Either include it or remove the dependency array.",["285"],"'createDevice' is defined but never used.",["286"],"'useParams' is defined but never used.","'fetchBasketCards' is defined but never used.","'fetchRestaurantTypesById' is defined but never used.",["287"],"'createRestaurantType' is defined but never used.","'restaurant' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"288","fix":"289"},[1706,1706]," rel=\"noreferrer\"",[1882,1882],[2072,2072],[3250,3250],[3426,3426],{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"292","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"292","fix":"303"},{"desc":"292","fix":"304"},"Update the dependencies array to be: [user]",{"range":"305","text":"306"},"Update the dependencies array to be: [id]",{"range":"307","text":"308"},"Update the dependencies array to be: [restaurant]",{"range":"309","text":"310"},"Update the dependencies array to be: [restaurant, searchText]",{"range":"311","text":"312"},{"range":"313","text":"310"},"Update the dependencies array to be: [devicePrice]",{"range":"314","text":"315"},"Update the dependencies array to be: [count, device, devicePrice, id]",{"range":"316","text":"317"},"Update the dependencies array to be: [calculateTotal, currentCount]",{"range":"318","text":"319"},{"range":"320","text":"310"},{"range":"321","text":"310"},[697,699],"[user]",[1037,1039],"[id]",[904,906],"[restaurant]",[1113,1125],"[restaurant, searchText]",[571,573],[744,746],"[devicePrice]",[1135,1160],"[count, device, devicePrice, id]",[1223,1237],"[calculateTotal, currentCount]",[1066,1068],[649,651]]