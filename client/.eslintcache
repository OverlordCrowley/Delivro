[{"C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\index.js":"1","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\store\\UserStore.js":"2","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\App.js":"3","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\store\\DeviceStore.js":"4","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\http\\userAPI.js":"5","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\AppRouter.js":"6","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\footer\\Footer.js":"7","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\narbar\\NavBar.js":"8","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\http\\index.js":"9","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\routes.js":"10","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\utils\\consts.js":"11","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\pages\\DevicePage.js":"12","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\pages\\Auth.js":"13","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\pages\\Shop.js":"14","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\pages\\Admin.js":"15","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\pages\\Basket.js":"16","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\http\\restaurantAPI.js":"17","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\http\\deviceAPI.js":"18","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\DeviceList.js":"19","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\search\\Search.js":"20","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\modals\\CreateType.js":"21","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\modals\\CreateRestaurantType.js":"22","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\basketCard\\BasketCard.js":"23","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\modals\\CreateRestaurant.js":"24","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\modals\\CreateDevice.js":"25","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\DeviceItem.js":"26","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\modals\\CreateOrder.js":"27","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\modals\\ChangeOrderState.js":"28","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\modals\\CreateEmail.js":"29"},{"size":443,"mtime":1686565508000,"results":"30","hashOfConfig":"31"},{"size":401,"mtime":1611985806000,"results":"32","hashOfConfig":"31"},{"size":938,"mtime":1686992045952,"results":"33","hashOfConfig":"31"},{"size":1100,"mtime":1686991684328,"results":"34","hashOfConfig":"31"},{"size":695,"mtime":1686988348023,"results":"35","hashOfConfig":"31"},{"size":773,"mtime":1686476962000,"results":"36","hashOfConfig":"31"},{"size":4443,"mtime":1687287100361,"results":"37","hashOfConfig":"31"},{"size":7610,"mtime":1686474860000,"results":"38","hashOfConfig":"31"},{"size":407,"mtime":1686989323259,"results":"39","hashOfConfig":"31"},{"size":774,"mtime":1611985806000,"results":"40","hashOfConfig":"31"},{"size":228,"mtime":1611985806000,"results":"41","hashOfConfig":"31"},{"size":6785,"mtime":1687071986235,"results":"42","hashOfConfig":"31"},{"size":3142,"mtime":1611985806000,"results":"43","hashOfConfig":"31"},{"size":1386,"mtime":1686994542641,"results":"44","hashOfConfig":"31"},{"size":2608,"mtime":1687073764267,"results":"45","hashOfConfig":"31"},{"size":4165,"mtime":1687002207695,"results":"46","hashOfConfig":"31"},{"size":825,"mtime":1687004190787,"results":"47","hashOfConfig":"31"},{"size":2764,"mtime":1687287813714,"results":"48","hashOfConfig":"31"},{"size":1080,"mtime":1686992970193,"results":"49","hashOfConfig":"31"},{"size":521,"mtime":1686483898000,"results":"50","hashOfConfig":"31"},{"size":1355,"mtime":1611985806000,"results":"51","hashOfConfig":"31"},{"size":2263,"mtime":1686639686000,"results":"52","hashOfConfig":"31"},{"size":3658,"mtime":1687001640864,"results":"53","hashOfConfig":"31"},{"size":2153,"mtime":1686512936000,"results":"54","hashOfConfig":"31"},{"size":5168,"mtime":1687205725305,"results":"55","hashOfConfig":"31"},{"size":1698,"mtime":1686993433484,"results":"56","hashOfConfig":"31"},{"size":1725,"mtime":1687005131650,"results":"57","hashOfConfig":"31"},{"size":3006,"mtime":1687286370450,"results":"58","hashOfConfig":"31"},{"size":1996,"mtime":1687287670916,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"d0nrcv",{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":5,"source":null},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"62"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\index.js",[],["132","133"],"C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\store\\UserStore.js",[],"C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\App.js",["134"],"import React, {useContext, useEffect, useState} from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/narbar/NavBar\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"./index\";\nimport {check} from \"./http/userAPI\";\nimport {Spinner} from \"react-bootstrap\";\nimport Footer from \"./components/footer/Footer\";\n\nconst App = observer(() => {\n    const {user} = useContext(Context)\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        check().then(data => {\n            user.setUser(true)\n            user.setIsAuth(true)\n        }).finally(() => setLoading(false))\n    }, [])\n\n    if (loading) {\n        return <Spinner animation={\"grow\"}/>\n    }\n\n    return (\n        <BrowserRouter>\n            <NavBar />\n            <AppRouter />\n            <Footer/>\n        </BrowserRouter>\n    );\n});\n\nexport default App;\n","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\store\\DeviceStore.js",[],"C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\http\\userAPI.js",[],"C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\AppRouter.js",[],"C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\footer\\Footer.js",["135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152"],"C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\narbar\\NavBar.js",["153","154","155","156","157","158","159","160"],"import React, {useContext} from 'react';\nimport {Context} from \"../../index\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport {NavLink} from \"react-router-dom\";\nimport {ADMIN_ROUTE, BASKET_ROUTE, LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE} from \"../../utils/consts\";\nimport {Button} from \"react-bootstrap\";\nimport '../styles.css';\nimport {observer} from \"mobx-react-lite\";\nimport Container from \"react-bootstrap/Container\";\nimport {useHistory} from 'react-router-dom'\nconst NavBar = observer(() => {\n    const {user} = useContext(Context)\n    const history = useHistory()\n\n    const logOut = () => {\n        user.setUser({})\n        user.setIsAuth(false)\n    }\n\n    return (\n        <Navbar bg=\"white\" variant=\"white\">\n\n\n\n                <header className=\"header\">\n                    <div className=\"container\">\n                        <div className=\"header_body\">\n                            <div className=\"header_logo\">\n                                <NavLink to='/' className=\"logo\">\n                                    <span className=\"USER\">Delivro</span>\n                                </NavLink>\n                            </div>\n\n                            <div className=\"header_items\">\n                                <div className=\"header_login\">\n                                    {user.isAuth ?\n                                        <>\n                                            <button className=\"login_button\" id=\"myBtn_Admin\" onClick={() => history.push(ADMIN_ROUTE)}>Админ панель\n                                            </button>\n                                            <button className=\"login_button\" id=\"myBtn_Admin\" onClick={() => logOut()}>Выход\n                                            </button>\n                                            <button className=\"header_basket\" id=\"myBtn_card\" onClick={() => history.push(BASKET_ROUTE)}>\n                                                <i className='bx bxs-shopping-bag bx-sm'></i>\n                                            </button>\n                                        </>\n                                        :\n                                        <>\n                                            <button className=\"login_button\" id=\"myBtn_registration\" onClick={() => history.push(REGISTRATION_ROUTE)}>Регистрация <i\n                                                className='bx bx-user-plus bx-sx'></i></button>\n                                            <button className=\"login_button\" id=\"myBtn_login\" onClick={() => history.push(LOGIN_ROUTE)}>Авторизация <i\n                                                className='bx bxs-user-check bx-sx'></i></button>\n                                        </>\n                                    }\n\n\n                                </div>\n\n\n                                <div id=\"myModal_registration\" className=\"modal registration\">\n                                    <div className=\"modal-content\">\n                                        <div className=\"modal-header registration\">\n                                            <span className=\"close_registration\">&times;</span>\n                                            <h2>Регистрация</h2>\n                                        </div>\n\n                                        <div className=\"modal-body\">\n                                            <form>\n                                                <input type=\"email\" placeholder=\"E-mail\" required/>\n                                                    <input type=\"tel\" placeholder=\"Телефон\" required/>\n                                                        <input type=\"text\" placeholder=\"Логин\" required/>\n                                                            <input type=\"password\" placeholder=\"Пароль\" required/>\n                                                                <input type=\"password\" placeholder=\"Повторите пароль\"\n                                                                       required />\n                                                                    <button>Зарегистрироваться</button>\n                                            </form>\n                                        </div>\n\n                                        <div className=\"modal-footer registration\">\n                                            <span>Есть аккаунт?</span> <a href=\"javascript:login();\">Авторизация</a><i\n                                            className='bx bx-right-arrow-alt'></i>\n                                        </div>\n                                    </div>\n                                </div>\n\n\n                                <div id=\"myModal_login\" className=\"modal login\">\n                                    <div className=\"modal-content\">\n                                        <div className=\"modal-header login\">\n                                            <span className=\"close_login\">&times;</span>\n                                            <h2>Авторизация</h2>\n                                        </div>\n\n                                        <div className=\"modal-body\">\n                                            <form>\n                                                <input type=\"text\" placeholder=\"Логин\" required/>\n                                                    <input type=\"password\" placeholder=\"Пароль\" required/>\n                                                        <button>Войти</button>\n                                            </form>\n                                        </div>\n\n                                        <div className=\"modal-footer login\">\n                                            <span>Нет аккаунта?</span> <a\n                                            href=\"javascript:registration();\">Регистрация</a><i\n                                            className='bx bx-right-arrow-alt'></i>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"header_basket\" id=\"myBtn_card\">\n\n                                </div>\n\n                                <div id=\"myModal_card\" class=\"modal card\">\n                                    <div class=\"modal-content card\">\n                                        <div class=\"modal-header card\">\n                                            <span class=\"close_card\">&times;</span>\n                                            <h2>Ваши товары</h2>\n                                        </div>\n\n                                        <div class=\"modal-body\">\n                                            <div class=\"products\">\n                                                <img src=\"assets/img/hotter/french_omelette.png\" alt=\"Французский омлет\"/>\n                                                <h5>Французский омлет</h5>\n\n                                            </div>\n                                        </div>\n\n                                        <div class=\"modal-footer card\">\n\n                                        </div>\n                                    </div>\n                                </div>\n\n\n                            </div>\n                        </div>\n                    </div>\n                </header>\n\n\n\n\n\n        </Navbar>\n\n    );\n});\n\nexport default NavBar;\n","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\http\\index.js",[],"C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\routes.js",[],"C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\utils\\consts.js",[],"C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\pages\\DevicePage.js",["161","162","163","164","165","166","167","168"],"import React, {useContext, useEffect, useState} from 'react';\nimport {Button, Card, Col, Container, Image, Row} from \"react-bootstrap\";\nimport {useParams} from 'react-router-dom'\nimport {\n    createBasketCard,\n    fetchRestaurantAllTypesById,\n    fetchRestaurantTypesById\n} from \"../http/deviceAPI\";\nimport {fetchOneRestaurant} from \"../http/restaurantAPI\";\nimport {Context} from \"../index\";\nimport jwt_decode from \"jwt-decode\";\n\nconst DevicePage = () => {\n    const [restaurant, setRestaurant] = useState([]);\n    const {id} = useParams()\n    const {user} = useContext(Context)\n    let [types, setTypes] = useState();\n    let [allFoodTypes, setAllFoodTypes] = useState();\n    let [header, setHeader] = useState([]);\n    let [selectedType, setSelectedType] = useState({});\n\n\n    useEffect(() => {\n\n        fetchOneRestaurant(id).then(data => {\n            setRestaurant(data);\n        })\n        fetchRestaurantTypesById(id).then(data => setTypes(data))\n        fetchRestaurantAllTypesById(id).then(data => setAllFoodTypes(data))\n    }, [])\n\n    useEffect(() => {\n        let arr = [];\n\n        for (let allFoodTypesKey in allFoodTypes) {\n            const foodTypeName = allFoodTypes[allFoodTypesKey]?.foodType?.name;\n            const foodTypeId = allFoodTypes[allFoodTypesKey]?.foodType?.id;\n\n            if (foodTypeName && !arr.some(item => item.name === foodTypeName)) {\n                arr.push({\n                    name: foodTypeName,\n                    id: foodTypeId\n                });\n            }\n        }\n\n        setHeader(arr);\n\n        if (arr.length > 0) {\n            setSelectedType(arr[0]);\n        }\n    }, [allFoodTypes]);\n\n\n\n    return (\n        <Container className=\"mt-3\">\n\n                <section className=\"lending\">\n                    <div className=\"container\">\n                        <img src={restaurant && restaurant.img ? (process.env.REACT_APP_API_URL + restaurant['img']) : \"\"}  className='restaurantMainImage'/>\n                        <div className=\"row\">\n                            <div className=\"col-lg-4 col-md-7 col-xs-12\">\n                                <div className=\"card_inn\">\n                                    <div className=\"name\">{restaurant ? restaurant['name'] : \"\"}</div>\n\n                                    <div className=\"second\" id=\"snack_container\">\n                                        <div className=\"price_european\">₸₸₸ {types ? types.map(el=>(\n                                            \" • \" + el.name\n                                            )\n                                        ) : ''}</div>\n                                        <div className=\"time_delivery\">{restaurant ? restaurant.time : \"\"} мин</div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n\n                <nav className=\"nav_menu\" id=\"nav_menu\">\n                    <div className=\"container\">\n                        <div className=\"row col-lg-8 col-md-12 col-xs-0 main_menu\">\n                            {[...header].map(el=>(\n                                <button className={\"headerMap\" +  \" \" + (selectedType.id === el.id ? 'green': '')} onClick={(e)=>{\n                                    setSelectedType(el)\n                                }}>{el.name}</button>\n                            ))}\n                        </div>\n                    </div>\n                </nav>\n\n                <main className=\"main_list\">\n                    <div className=\"container\">\n                        <h2 className=\"main_title\">{selectedType ? selectedType.name : ''}</h2>\n                        <div className=\"row\">\n                        {allFoodTypes ? allFoodTypes.map(el=>(\n                            el && selectedType && el.foodType.id === selectedType.id ?\n                               <>\n\n\n                                       <div className=\"col-lg-6 col-md-12 col-xs-12\" >\n                                           <div className=\"card_main\" id=\"myBtn_1\"\n                                                onClick={(e)=>{\n                                                    if(user.isAuth){\n                                                        try{\n                                                            createBasketCard({'userId': jwt_decode(localStorage.getItem('token')).id, 'deviceId': el.id})\n                                                                .then((data) => {\n\n                                                                })\n                                                        }\n                                                        catch (e){\n                                                            console.log(e)\n                                                        }\n\n                                                    }\n                                                    else{\n                                                        alert('Необходимо авторизоваться')\n                                                    }\n\n                                                }}\n                                           >\n                                               <div className=\"left_card\">\n                                                   <p id='card_main' className=\"card_title\">{el.name}</p>\n                                                   <p className=\"card_description\">\n                                                       {el.composition}\n                                                   </p>\n                                                   <p className=\"card_price\">\n                                                       <span className=\"grams\">{el.weight} г |</span>\n                                                       {el['discount_price'] ? <span className=\"past_price\">{el.price} Тг</span> : ''}\n                                                       {el['discount_price']} Тг\n                                                   </p>\n                                               </div>\n\n                                               <div className=\"right_card\">\n                                                   <img src={process.env.REACT_APP_API_URL + el.img}\n                                                        alt={el.name}/>\n                                               </div>\n                                           </div>\n\n\n                                       </div>\n\n\n                           </>\n                               : ''\n                        )) : ''}\n\n                        </div>\n                    </div>\n                </main>\n\n        </Container>\n    );\n};\n\nexport default DevicePage;\n","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\pages\\Auth.js",["169"],"import React, {useContext, useState} from 'react';\nimport {Container, Form} from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport {NavLink, useLocation, useHistory} from \"react-router-dom\";\nimport {LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE} from \"../utils/consts\";\nimport {login, registration} from \"../http/userAPI\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\n\nconst Auth = observer(() => {\n    const {user} = useContext(Context)\n    const location = useLocation()\n    const history = useHistory()\n    const isLogin = location.pathname === LOGIN_ROUTE\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const click = async () => {\n        try {\n            let data;\n            if (isLogin) {\n                data = await login(email, password);\n            } else {\n                data = await registration(email, password);\n            }\n            user.setUser(user)\n            user.setIsAuth(true)\n            history.push(SHOP_ROUTE)\n        } catch (e) {\n            alert(e.response.data.message)\n        }\n\n    }\n\n    return (\n        <Container\n            className=\"d-flex justify-content-center align-items-center\"\n            style={{height: window.innerHeight - 54}}\n        >\n            <Card style={{width: 600}} className=\"p-5\">\n                <h2 className=\"m-auto\">{isLogin ? 'Авторизация' : \"Регистрация\"}</h2>\n                <Form className=\"d-flex flex-column\">\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваш email...\"\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваш пароль...\"\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                        type=\"password\"\n                    />\n                    <Row className=\"d-flex justify-content-between mt-3 pl-3 pr-3\">\n                        {isLogin ?\n                            <div>\n                                Нет аккаунта? <NavLink to={REGISTRATION_ROUTE}>Зарегистрируйся!</NavLink>\n                            </div>\n                            :\n                            <div>\n                                Есть аккаунт? <NavLink to={LOGIN_ROUTE}>Войдите!</NavLink>\n                            </div>\n                        }\n                        <Button\n                            variant={\"outline-success\"}\n                            onClick={click}\n                        >\n                            {isLogin ? 'Войти' : 'Регистрация'}\n                        </Button>\n                    </Row>\n\n                </Form>\n            </Card>\n        </Container>\n    );\n});\n\nexport default Auth;\n","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\pages\\Shop.js",["170","171"],"import React, {useContext, useEffect, useState} from 'react';\nimport {Container} from \"react-bootstrap\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport DeviceList from \"../components/DeviceList\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport {fetchDevices, fetchTypes} from \"../http/deviceAPI\";\nimport {fetchRestaurant} from \"../http/restaurantAPI\";\nimport Search from \"../components/search/Search\";\n\nconst Shop = observer(() => {\n    const {restaurant} = useContext(Context)\n    let [searchText, setSearchText] = useState('');\n\n    let textChangeHandler = (val) =>{\n        setSearchText(val);\n    }\n\n\n    useEffect(() => {\n        fetchRestaurant().then(data => restaurant.setRestaurant(data))\n        fetchTypes().then(data => restaurant.setTypes(data))\n        fetchDevices().then(data => restaurant.setDevices(data))\n    }, [])\n\n    useEffect(() => {\n        fetchRestaurant(searchText).then(data => {\n            restaurant.setRestaurant(data)\n        })\n            .catch(e=>{\n                console.log(e)\n            })\n    }, [searchText])\n\n\n    return (\n        <Container>\n            <Row>\n                <Col>\n                    <Search fc={textChangeHandler}/>\n                    <DeviceList />\n                </Col>\n            </Row>\n        </Container>\n    );\n});\n\nexport default Shop;\n","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\pages\\Admin.js",[],"C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\pages\\Basket.js",["172","173","174"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { fetchBasketCards, fetchRestaurant, fetchTypes } from '../http/deviceAPI';\r\nimport jwt_decode from 'jwt-decode';\r\nimport BasketCard from '../components/basketCard/BasketCard';\r\nimport CreateOrder from \"../components/modals/CreateOrder\";\r\n\r\nconst Basket = observer(() => {\r\n    const [cards, setCard] = useState([]);\r\n    const [totalPrice, setTotalPrice] = useState(0);\r\n    const [orderVisible, setOrderVisible] = useState(false)\r\n\r\n\r\n    const updateTotalPrice = (price) => {\r\n        setTotalPrice((prevTotal) => prevTotal + Number(price));\r\n    };\r\n\r\n    const updateTotalPriceMinus = (price) => {\r\n        setTotalPrice((prevTotal) => prevTotal - Number(price));\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        fetchBasketCards({ userId: jwt_decode(localStorage.getItem('token')).id }).then((data) => {\r\n            setCard(data);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n            let arr = cards.reduce((sum, el) => {\r\n            if (el.device.discount_price < el.device.price) {\r\n                return sum + el.device.discount_price * el.count;\r\n            } else {\r\n                return sum + el.device.price * el.count;\r\n            }\r\n        }, 0);\r\n        setTotalPrice(arr);\r\n    }, [cards])\r\n\r\n    return (\r\n        <Container className=\"mt-3\">\r\n            <nav className=\"nav_menu\" id=\"nav_menu\">\r\n                <div className=\"container\">\r\n                    <div className=\"row col-lg-8 col-md-12 col-xs-0 main_menu\">\r\n                        {cards && cards.length > 0 ? (\r\n                            <>\r\n                                <table>\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th className=\"green\">Изображение</th>\r\n                                        <th className=\"green\">Название</th>\r\n                                        <th className=\"green\">Количество</th>\r\n                                        <th className=\"green\">Цена за 1шт</th>\r\n                                        <th className=\"green\">Цена</th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                    {cards.map((el) => (\r\n                                        <BasketCard\r\n                                            key={el.id}\r\n                                            id={el.id}\r\n                                            count={el.count}\r\n                                            device={el.device}\r\n                                            updateTotalPricePlus={updateTotalPrice}\r\n                                            updateTotalPriceMinus={updateTotalPriceMinus}\r\n                                            devicePrice={el.device.price > el.device.discount_price ? el.count * el.device.discount_price : el.count * el.device.price}\r\n                                        />\r\n                                    ))}\r\n                                    </tbody>\r\n                                </table>\r\n\r\n                                <p className=\"TotalPrice\">Итоговая цена: {totalPrice}</p>\r\n                                <br />\r\n                                <button className=\"headerMap green OrderBtn\" onClick={(e) => {\r\n                                    setOrderVisible(true)\r\n                                }}>\r\n                                    Перейти к оформлению\r\n                                </button>\r\n                            </>\r\n                        ) : (\r\n                            <p style={{ color: '#fff', fontSize: 26 }}>У вас нет товаров в корзине</p>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <CreateOrder show={orderVisible} onHide={() => setOrderVisible(false)}/>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Basket;\r\n","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\http\\restaurantAPI.js",["175"],"import {$authHost, $host} from \"./index\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createRestaurant = async (type) => {\n    const {data} = await $authHost.post('api/restaurant', type)\n    return data\n}\n\nexport const fetchRestaurant = async (text) => {\n    if(text !== \"\"){\n            const {data} = await $host.get('api/restaurant?name=' + text )\n        return data\n    }\n    else{\n        const {data} = await $host.get('api/restaurant')\n        return data\n    }\n}\n\n\nexport const fetchOneRestaurant = async (id) => {\n    try {\n        const {data} = await $host.get('api/restaurant/' + id)\n        return data\n    }\n   catch (e){\n       console.log(e)\n   }\n}\n\nexport const createOrder = async ({phone, userId}) => {\n    const {data} = await $authHost.post('api/order', {phone, userId})\n    return data\n}\n\n\n\n\n\n\n\n","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\http\\deviceAPI.js",["176"],"C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\DeviceList.js",["177","178","179"],"import React, {useContext, useEffect, useState} from 'react';\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport {Row} from \"react-bootstrap\";\nimport './styles.css';\nimport DeviceItem from \"./DeviceItem\";\nimport {fetchRestaurant} from \"../http/restaurantAPI\";\n\nconst DeviceList = observer((props) => {\n    const {restaurant} = useContext(Context)\n\n    return (\n        <Row className=\"d-flex\">\n            <main>\n                <div className=\"container\">\n                    <h2 className=\"main_title\">Все предложения</h2>\n                    <div className=\"row\" style={{alignItems: \"stretch\"}}>\n                        {restaurant.restaurant.length > 0 ?\n                            restaurant.restaurant.map(cafe=>(\n                            <DeviceItem cafe={cafe} key={cafe.id}/>\n                        )) : 'Нет ресторанов с данным названием'\n                        }\n                    </div>\n                </div>\n\n            </main>\n        </Row>\n    );\n});\n\nexport default DeviceList;\n","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\search\\Search.js",[],"C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\modals\\CreateType.js",[],"C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\modals\\CreateRestaurantType.js",["180","181","182"],"import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Form, Button} from \"react-bootstrap\";\nimport {createRestaurantType, createType, fetchRestaurant, fetchTypes} from \"../../http/deviceAPI\";\nimport {Context} from \"../../index\";\n\nconst CreateType = ({show, onHide}) => {\n    const {restaurant} = useContext(Context)\n    const [value, setValue] = useState('')\n    const [restauran, setRestauran] = useState('')\n\n\n    useEffect(() => {\n        fetchRestaurant().then(data => restaurant.setRestaurant(data))\n    }, [])\n\n    const addRestaurantType = () => {\n        createRestaurantType({'name': value, 'restaurantId': restauran}).then(data => {\n            setValue('')\n            onHide()\n        })\n    }\n\n    function changeRestaurant(e) {\n        setRestauran(e.target.value);\n    }\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить тип\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Control\n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                        placeholder={\"Введите название типа\"}\n                    />\n                    <select className=\"lang lang-b\" value={restauran} onChange={changeRestaurant}>\n                        {restaurant.restaurant.map(restaurants =>\n                            <option\n                                value={restaurants.id}\n                                key={restaurants.id}>\n                                {restaurants.name}\n                            </option>\n                        )}\n                    </select>\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addRestaurantType}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default CreateType;\n","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\basketCard\\BasketCard.js",["183","184","185","186"],"import React, { useState, useEffect } from 'react';\r\nimport { deleteBasketCard, updateBasketCard } from '../../http/deviceAPI';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nconst BasketCard = ({ count, device, updateTotalPricePlus, updateTotalPriceMinus, devicePrice, id }) => {\r\n    const [currentCount, setCurrentCount] = useState(count);\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [img, setImg] = useState('');\r\n    const [discountPrice, setDiscountPrice] = useState(0);\r\n    const [total, setTotal] = useState(0);\r\n    const [devPrice, setDevPrice]=  useState(devicePrice);\r\n    const [deviceId, setDeviceId]=  useState(id);\r\n\r\n\r\n    useEffect(()=>{\r\n        setTotal(devicePrice)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setName(device.name);\r\n        setPrice(device.price);\r\n        setImg(device.img);\r\n        setDiscountPrice(device.discount_price);\r\n        setDeviceId(id)\r\n        if(device.discount_price < device.price){\r\n            setTotal(device.discount_price * count)\r\n        }\r\n        else {\r\n            setTotal(device.price * count)\r\n        }\r\n    }, [device, devicePrice, id]);\r\n\r\n    useEffect(()=>{\r\n        calculateTotal();\r\n\r\n    }, [currentCount])\r\n\r\n    const calculateTotal = () => {\r\n        let calculatedTotal = 0;\r\n        if (discountPrice < price) {\r\n            calculatedTotal = discountPrice * currentCount;\r\n        } else {\r\n            calculatedTotal = price * currentCount;\r\n        }\r\n        setTotal(calculatedTotal);\r\n\r\n    };\r\n\r\n    const handleIncrement = () => {\r\n        if (currentCount < 10) {\r\n            setCurrentCount((prevCount) => prevCount + 1);\r\n\r\n            updateBasketCard({ 'userId': jwt_decode(localStorage.getItem('token')).id,'deviceId': deviceId, 'count': currentCount+1}).then()\r\n            if(price > discountPrice){\r\n                updateTotalPricePlus(discountPrice)\r\n            }\r\n            else{\r\n                updateTotalPricePlus(price)\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDecrement = () => {\r\n        if (currentCount > 1) {\r\n            setCurrentCount((prevCount) => prevCount - 1);\r\n            updateBasketCard({ 'userId': jwt_decode(localStorage.getItem('token')).id,'deviceId': deviceId, 'count': currentCount-1}).then()\r\n            if(price > discountPrice){\r\n                updateTotalPriceMinus(discountPrice)\r\n            }\r\n            else{\r\n                updateTotalPriceMinus(price)\r\n            }\r\n\r\n        }\r\n        else{\r\n            deleteBasketCard({ 'userId': jwt_decode(localStorage.getItem('token')).id,'deviceId': deviceId}).then(\r\n                window.location.reload()\r\n            )\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <tr>\r\n            <td className=\"RowImage\">\r\n                <img src={img ? process.env.REACT_APP_API_URL + img : ''} alt={img ? img : ''} />\r\n            </td>\r\n            <td>\r\n                <span className=\"whiteText\">{name ? name : ''}</span>\r\n            </td>\r\n            <td>\r\n        <span className=\"whiteText\">\r\n          <button className={'btnEvent'} onClick={handleIncrement}>+</button>\r\n            <span className={'number'}>{currentCount}</span>\r\n            <button className={'btnEvent'} onClick={handleDecrement}>-</button>\r\n        </span>\r\n            </td>\r\n            <td>\r\n                <span className=\"whiteText\">{discountPrice < price ? discountPrice : price}</span>\r\n            </td>\r\n            <td className={'tdTotal'}>\r\n                <span className=\"whiteText total\">{total > 0 ? total : devPrice}</span>\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default BasketCard;\r\n","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\modals\\CreateRestaurant.js",["187","188"],"import React, {useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {createDevice, createType} from \"../../http/deviceAPI\";\nimport {createRestaurant} from \"../../http/restaurantAPI\";\n\nconst CreateRestaurant = ({show, onHide}) => {\n    const [value, setValue] = useState('')\n    const [time, setTime] = useState('')\n    const [file, setFile] = useState(null)\n\n\n    const addRestaurant = () => {\n        const formData = new FormData()\n        formData.append('name', value)\n        formData.append('time', time)\n        formData.append('img', file)\n        createRestaurant(formData).then(data => onHide())\n    }\n\n    const selectFile = e => {\n        setFile(e.target.files[0])\n    }\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить ресторан\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Control\n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                        placeholder={\"Введите название ресторана\"}\n                    />\n                    <Form.Control\n                        value={time}\n                        onChange={e => setTime(e.target.value)}\n                        placeholder={\"Введите время готовки\"}\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        type=\"file\"\n                        onChange={selectFile}\n                    />\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addRestaurant}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default CreateRestaurant;\n","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\modals\\CreateDevice.js",["189"],"import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {Context} from \"../../index\";\nimport {createDevice, fetchRestaurant, fetchTypes} from \"../../http/deviceAPI\";\nimport {observer} from \"mobx-react-lite\";\n\nconst CreateDevice = observer(({show, onHide}) => {\n    const {restaurant} = useContext(Context)\n    const [name, setName] = useState('')\n    const [composition, setComposition] = useState('')\n    const [price, setPrice] = useState(0)\n    const [discountPrice, setDiscountPrice] = useState(0)\n    const [weight, setWeight] = useState(0)\n    const [file, setFile] = useState(null)\n    const [type, setType] = useState(null)\n    const [restauran, setResrauran] = useState(null)\n\n    useEffect(() => {\n        fetchTypes().then(data => {\n            restaurant.setTypes(data)\n\n            if(data.length > 0){\n                setType(data[0]['id'])\n            }\n        })\n        fetchRestaurant().then(data => {\n            restaurant.setRestaurant(data)\n\n            if(data.length > 0){\n                setResrauran(data[0]['id'])\n            }\n        })\n    }, [])\n\n\n    const selectFile = e => {\n        setFile(e.target.files[0])\n    }\n\n    function changeType(e) {\n        setType(e.target.value);\n    }\n\n    function changeRestaurant(e) {\n        setResrauran(e.target.value);\n    }\n\n\n    const addDevice = () => {\n\n        const formData = new FormData()\n        formData.append('name', name)\n        formData.append('composition', composition)\n        formData.append('price', `${price}`)\n        formData.append('weight', `${weight}`)\n        formData.append('discount_price', `${discountPrice}`)\n        formData.append('img', file)\n        formData.append('restaurantId', restauran)\n        formData.append('foodTypeId', type)\n        createDevice(formData).then(data => onHide())\n    }\n\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить блюдо\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n\n                    <Form.Control\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                        className=\"mt-3 adminInput\"\n                        placeholder=\"Введите название блюда\"\n                    />\n                    <Form.Control\n                        value={composition}\n                        onChange={e => setComposition(e.target.value)}\n                        className=\"mt-3 adminInput\"\n                        placeholder=\"Введите состав блюда\"\n                    />\n                    <select className=\"lang lang-b\" value={restauran} onChange={changeRestaurant}>\n                        {restaurant.restaurant.map(restaurants =>\n                            <option\n                                value={restaurants.id}\n                                key={restaurants.id}>\n                                {restaurants.name}\n                            </option>\n                        )}\n                    </select>\n                    <select className=\"lang lang-b\" value={type} onChange={changeType}>\n                        {restaurant.types.map(type =>\n                            <option\n                                value={type.id}\n                                key={type.id}>\n                                {type.name}\n                            </option>\n                        )}\n                    </select>\n                    <Form.Control\n\n                        onChange={e => setPrice(Number(e.target.value))}\n                        className=\"mt-3\"\n                        placeholder=\"Введите стоимость блюда\"\n                        type=\"number\"\n                    />\n                    <Form.Control\n\n                        onChange={e => setDiscountPrice(Number(e.target.value))}\n                        className=\"mt-3\"\n                        placeholder=\"Введите стоимость блюда с скидкой\"\n                        type=\"number\"\n                    />\n                    <Form.Control\n\n                        onChange={e => setWeight(Number(e.target.value))}\n                        className=\"mt-3\"\n                        placeholder=\"Введите вес блюда\"\n                        type=\"number\"\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        type=\"file\"\n                        onChange={selectFile}\n                    />\n\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addDevice}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default CreateDevice;\n","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\DeviceItem.js",["190","191","192","193","194","195","196"],"import React, {useContext, useEffect, useState} from 'react';\nimport {useHistory, useParams} from \"react-router-dom\"\nimport './styles.css';\nimport {DEVICE_ROUTE} from \"../utils/consts\";\nimport {fetchBasketCards, fetchRestaurant, fetchRestaurantTypes, fetchRestaurantTypesById} from \"../http/deviceAPI\";\nimport {Context} from \"../index\";\nimport {observer} from \"mobx-react-lite\";\nimport jwt_decode from \"jwt-decode\";\n\nconst DeviceItem = observer(({cafe}) => {\n    const history = useHistory();\n    const {restaurant} = useContext(Context)\n    useEffect(() => {\n        fetchRestaurantTypes().then(data => restaurant.setRestaurantTypes(data))\n\n    }, [])\n\n    return (\n        <button className=\"restaurantItem\" onClick={() => history.push(DEVICE_ROUTE + \"/\" + cafe.id)}>\n            <div >\n                <div className=\"card_restaurants\">\n                    <img src={process.env.REACT_APP_API_URL + cafe.img} className=\"card_img\"\n                         alt={cafe.name + \" img\"}/>\n\n                    <div className=\"card_top\">\n                        <p style={{textAlign: \"left\"}}>{cafe.name}</p>\n                        <p style={{textAlign: \"left\"}} className=\"card_text\">₸₸\n                            {\n                                restaurant.restaurantTypes.map((el)=>(\n                                    el.restaurantId === cafe.id ? \" • \" + el.name: ''\n                                ))\n                            }\n\n                        </p>\n                        <p style={{textAlign: \"left\"}} className=\"card_time\">{cafe.time} мин</p>\n                    </div>\n                </div>\n            </div>\n        </button>\n    );\n});\n\nexport default DeviceItem;\n","C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\modals\\CreateOrder.js",[],"C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\modals\\ChangeOrderState.js",["197","198","199","200","201","202","203"],"C:\\Users\\Crowley\\Documents\\GitHub\\Delivro\\client\\src\\components\\modals\\CreateEmail.js",["204"],{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","severity":1,"message":"210","line":20,"column":8,"nodeType":"211","endLine":20,"endColumn":10,"suggestions":"212"},{"ruleId":"213","severity":1,"message":"214","line":13,"column":8,"nodeType":"215","messageId":"216","endLine":13,"endColumn":24},{"ruleId":"213","severity":1,"message":"217","line":16,"column":12,"nodeType":"215","messageId":"216","endLine":16,"endColumn":16},{"ruleId":"213","severity":1,"message":"218","line":17,"column":11,"nodeType":"215","messageId":"216","endLine":17,"endColumn":18},{"ruleId":"219","severity":1,"message":"220","line":33,"column":25,"nodeType":"221","endLine":33,"endColumn":43},{"ruleId":"222","severity":1,"message":"223","line":53,"column":33,"nodeType":"221","messageId":"224","endLine":53,"endColumn":74,"fix":"225"},{"ruleId":"222","severity":1,"message":"223","line":56,"column":33,"nodeType":"221","messageId":"224","endLine":56,"endColumn":78,"fix":"226"},{"ruleId":"222","severity":1,"message":"223","line":59,"column":33,"nodeType":"221","messageId":"224","endLine":59,"endColumn":84,"fix":"227"},{"ruleId":"228","severity":1,"message":"229","line":67,"column":36,"nodeType":"221","endLine":67,"endColumn":48},{"ruleId":"228","severity":1,"message":"229","line":68,"column":36,"nodeType":"221","endLine":68,"endColumn":86},{"ruleId":"228","severity":1,"message":"229","line":69,"column":36,"nodeType":"221","endLine":69,"endColumn":86},{"ruleId":"228","severity":1,"message":"229","line":75,"column":36,"nodeType":"221","endLine":75,"endColumn":48},{"ruleId":"228","severity":1,"message":"229","line":76,"column":36,"nodeType":"221","endLine":76,"endColumn":48},{"ruleId":"228","severity":1,"message":"229","line":77,"column":36,"nodeType":"221","endLine":77,"endColumn":48},{"ruleId":"222","severity":1,"message":"223","line":85,"column":29,"nodeType":"221","messageId":"224","endLine":85,"endColumn":73,"fix":"230"},{"ruleId":"222","severity":1,"message":"223","line":88,"column":29,"nodeType":"221","messageId":"224","endLine":88,"endColumn":79,"fix":"231"},{"ruleId":"228","severity":1,"message":"229","line":96,"column":36,"nodeType":"221","endLine":96,"endColumn":48},{"ruleId":"228","severity":1,"message":"229","line":97,"column":36,"nodeType":"221","endLine":97,"endColumn":48},{"ruleId":"228","severity":1,"message":"229","line":98,"column":36,"nodeType":"221","endLine":98,"endColumn":48},{"ruleId":"213","severity":1,"message":"232","line":4,"column":8,"nodeType":"215","messageId":"216","endLine":4,"endColumn":11},{"ruleId":"213","severity":1,"message":"233","line":6,"column":69,"nodeType":"215","messageId":"216","endLine":6,"endColumn":79},{"ruleId":"213","severity":1,"message":"234","line":7,"column":9,"nodeType":"215","messageId":"216","endLine":7,"endColumn":15},{"ruleId":"213","severity":1,"message":"235","line":10,"column":8,"nodeType":"215","messageId":"216","endLine":10,"endColumn":17},{"ruleId":"228","severity":1,"message":"229","line":80,"column":72,"nodeType":"221","endLine":80,"endColumn":102},{"ruleId":"236","severity":1,"message":"237","line":80,"column":80,"nodeType":"238","messageId":"239","endLine":80,"endColumn":101},{"ruleId":"228","severity":1,"message":"229","line":103,"column":72,"nodeType":"221","endLine":104,"endColumn":79},{"ruleId":"236","severity":1,"message":"237","line":104,"column":50,"nodeType":"238","messageId":"239","endLine":104,"endColumn":78},{"ruleId":"213","severity":1,"message":"234","line":2,"column":9,"nodeType":"215","messageId":"216","endLine":2,"endColumn":15},{"ruleId":"213","severity":1,"message":"240","line":2,"column":17,"nodeType":"215","messageId":"216","endLine":2,"endColumn":21},{"ruleId":"213","severity":1,"message":"241","line":2,"column":23,"nodeType":"215","messageId":"216","endLine":2,"endColumn":26},{"ruleId":"213","severity":1,"message":"242","line":2,"column":39,"nodeType":"215","messageId":"216","endLine":2,"endColumn":44},{"ruleId":"213","severity":1,"message":"243","line":2,"column":46,"nodeType":"215","messageId":"216","endLine":2,"endColumn":49},{"ruleId":"209","severity":1,"message":"244","line":30,"column":8,"nodeType":"211","endLine":30,"endColumn":10,"suggestions":"245"},{"ruleId":"219","severity":1,"message":"220","line":61,"column":25,"nodeType":"221","endLine":61,"endColumn":158},{"ruleId":"246","severity":1,"message":"247","line":84,"column":64,"nodeType":"248","messageId":"249","endLine":84,"endColumn":65},{"ruleId":"213","severity":1,"message":"250","line":26,"column":17,"nodeType":"215","messageId":"216","endLine":26,"endColumn":21},{"ruleId":"209","severity":1,"message":"251","line":25,"column":8,"nodeType":"211","endLine":25,"endColumn":10,"suggestions":"252"},{"ruleId":"209","severity":1,"message":"251","line":34,"column":8,"nodeType":"211","endLine":34,"endColumn":20,"suggestions":"253"},{"ruleId":"213","severity":1,"message":"254","line":1,"column":17,"nodeType":"215","messageId":"216","endLine":1,"endColumn":27},{"ruleId":"213","severity":1,"message":"255","line":4,"column":28,"nodeType":"215","messageId":"216","endLine":4,"endColumn":43},{"ruleId":"213","severity":1,"message":"256","line":4,"column":45,"nodeType":"215","messageId":"216","endLine":4,"endColumn":55},{"ruleId":"213","severity":1,"message":"257","line":2,"column":8,"nodeType":"215","messageId":"216","endLine":2,"endColumn":18},{"ruleId":"213","severity":1,"message":"257","line":2,"column":8,"nodeType":"215","messageId":"216","endLine":2,"endColumn":18},{"ruleId":"213","severity":1,"message":"258","line":1,"column":28,"nodeType":"215","messageId":"216","endLine":1,"endColumn":37},{"ruleId":"213","severity":1,"message":"259","line":1,"column":39,"nodeType":"215","messageId":"216","endLine":1,"endColumn":47},{"ruleId":"213","severity":1,"message":"255","line":7,"column":9,"nodeType":"215","messageId":"216","endLine":7,"endColumn":24},{"ruleId":"213","severity":1,"message":"260","line":4,"column":31,"nodeType":"215","messageId":"216","endLine":4,"endColumn":41},{"ruleId":"213","severity":1,"message":"256","line":4,"column":60,"nodeType":"215","messageId":"216","endLine":4,"endColumn":70},{"ruleId":"209","severity":1,"message":"251","line":15,"column":8,"nodeType":"211","endLine":15,"endColumn":10,"suggestions":"261"},{"ruleId":"213","severity":1,"message":"262","line":12,"column":22,"nodeType":"215","messageId":"216","endLine":12,"endColumn":33},{"ruleId":"209","severity":1,"message":"263","line":18,"column":8,"nodeType":"211","endLine":18,"endColumn":10,"suggestions":"264"},{"ruleId":"209","severity":1,"message":"265","line":32,"column":8,"nodeType":"211","endLine":32,"endColumn":33,"suggestions":"266"},{"ruleId":"209","severity":1,"message":"267","line":37,"column":8,"nodeType":"211","endLine":37,"endColumn":22,"suggestions":"268"},{"ruleId":"213","severity":1,"message":"269","line":4,"column":9,"nodeType":"215","messageId":"216","endLine":4,"endColumn":21},{"ruleId":"213","severity":1,"message":"260","line":4,"column":23,"nodeType":"215","messageId":"216","endLine":4,"endColumn":33},{"ruleId":"209","severity":1,"message":"251","line":34,"column":8,"nodeType":"211","endLine":34,"endColumn":10,"suggestions":"270"},{"ruleId":"213","severity":1,"message":"259","line":1,"column":39,"nodeType":"215","messageId":"216","endLine":1,"endColumn":47},{"ruleId":"213","severity":1,"message":"271","line":2,"column":21,"nodeType":"215","messageId":"216","endLine":2,"endColumn":30},{"ruleId":"213","severity":1,"message":"272","line":5,"column":9,"nodeType":"215","messageId":"216","endLine":5,"endColumn":25},{"ruleId":"213","severity":1,"message":"255","line":5,"column":27,"nodeType":"215","messageId":"216","endLine":5,"endColumn":42},{"ruleId":"213","severity":1,"message":"273","line":5,"column":66,"nodeType":"215","messageId":"216","endLine":5,"endColumn":90},{"ruleId":"213","severity":1,"message":"257","line":8,"column":8,"nodeType":"215","messageId":"216","endLine":8,"endColumn":18},{"ruleId":"209","severity":1,"message":"251","line":16,"column":8,"nodeType":"211","endLine":16,"endColumn":10,"suggestions":"274"},{"ruleId":"213","severity":1,"message":"275","line":6,"column":5,"nodeType":"215","messageId":"216","endLine":6,"endColumn":25},{"ruleId":"213","severity":1,"message":"260","line":7,"column":5,"nodeType":"215","messageId":"216","endLine":7,"endColumn":15},{"ruleId":"213","severity":1,"message":"255","line":9,"column":5,"nodeType":"215","messageId":"216","endLine":9,"endColumn":20},{"ruleId":"213","severity":1,"message":"256","line":10,"column":5,"nodeType":"215","messageId":"216","endLine":10,"endColumn":15},{"ruleId":"213","severity":1,"message":"257","line":13,"column":8,"nodeType":"215","messageId":"216","endLine":13,"endColumn":18},{"ruleId":"213","severity":1,"message":"276","line":16,"column":12,"nodeType":"215","messageId":"216","endLine":16,"endColumn":22},{"ruleId":"213","severity":1,"message":"277","line":17,"column":12,"nodeType":"215","messageId":"216","endLine":17,"endColumn":17},{"ruleId":"213","severity":1,"message":"260","line":4,"column":19,"nodeType":"215","messageId":"216","endLine":4,"endColumn":29},"no-native-reassign",["278"],"no-negated-in-lhs",["279"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["280"],"no-unused-vars","'ChangeOrderState' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'history' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"281","text":"282"},{"range":"283","text":"282"},{"range":"284","text":"282"},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",{"range":"285","text":"282"},{"range":"286","text":"282"},"'Nav' is defined but never used.","'SHOP_ROUTE' is defined but never used.","'Button' is defined but never used.","'Container' is defined but never used.","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","'Card' is defined but never used.","'Col' is defined but never used.","'Image' is defined but never used.","'Row' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["287"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'restaurant'. Either include it or remove the dependency array.",["288"],["289"],"'useContext' is defined but never used.","'fetchRestaurant' is defined but never used.","'fetchTypes' is defined but never used.","'jwt_decode' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'createType' is defined but never used.",["290"],"'setDevPrice' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'devicePrice'. Either include it or remove the dependency array. If 'setTotal' needs the current value of 'devicePrice', you can also switch to useReducer instead of useState and read 'devicePrice' in the reducer.",["291"],"React Hook useEffect has a missing dependency: 'count'. Either include it or remove the dependency array. If 'setTotal' needs the current value of 'count', you can also switch to useReducer instead of useState and read 'count' in the reducer.",["292"],"React Hook useEffect has a missing dependency: 'calculateTotal'. Either include it or remove the dependency array.",["293"],"'createDevice' is defined but never used.",["294"],"'useParams' is defined but never used.","'fetchBasketCards' is defined but never used.","'fetchRestaurantTypesById' is defined but never used.",["295"],"'createRestaurantType' is defined but never used.","'restaurant' is assigned a value but never used.","'value' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"296","fix":"297"},[1847,1847]," rel=\"noreferrer\"",[2023,2023],[2213,2213],[3468,3468],[3644,3644],{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"300","fix":"304"},{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},{"desc":"300","fix":"311"},{"desc":"300","fix":"312"},"Update the dependencies array to be: [user]",{"range":"313","text":"314"},"Update the dependencies array to be: [id]",{"range":"315","text":"316"},"Update the dependencies array to be: [restaurant]",{"range":"317","text":"318"},"Update the dependencies array to be: [restaurant, searchText]",{"range":"319","text":"320"},{"range":"321","text":"318"},"Update the dependencies array to be: [devicePrice]",{"range":"322","text":"323"},"Update the dependencies array to be: [count, device, devicePrice, id]",{"range":"324","text":"325"},"Update the dependencies array to be: [calculateTotal, currentCount]",{"range":"326","text":"327"},{"range":"328","text":"318"},{"range":"329","text":"318"},[697,699],"[user]",[1037,1039],"[id]",[904,906],"[restaurant]",[1113,1125],"[restaurant, searchText]",[571,573],[744,746],"[devicePrice]",[1135,1160],"[count, device, devicePrice, id]",[1223,1237],"[calculateTotal, currentCount]",[1176,1178],[649,651]]